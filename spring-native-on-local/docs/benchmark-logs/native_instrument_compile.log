Warning: The option '-H:ResourceConfigurationResources=META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-core/tomcat-resource.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ReflectionConfigurationResources=META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-core/tomcat-reflection.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ReflectionConfigurationResources=META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-websocket/tomcat-reflection.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ReflectionConfigurationResources=META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-el/tomcat-reflection.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ResourceConfigurationResources=META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-el/tomcat-resource.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: The option '-H:ResourceConfigurationResources=META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-websocket/tomcat-resource.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.
Warning: Please re-evaluate whether any experimental option is required, and either remove or unlock it. The build output lists all active experimental options, including where they come from and possible alternatives. If you think an experimental option should be considered as stable, please file an issue.
========================================================================================================================
GraalVM Native Image: Generating 'demo' (executable)...
========================================================================================================================
For detailed information and explanations on the build output, visit:
https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/BuildOutput.md
------------------------------------------------------------------------------------------------------------------------
[1/8] Initializing...                                                                                    (9.0s @ 0.15GB)
 Java version: 21.0.2+13-LTS, vendor version: Oracle GraalVM 21.0.2+13.1
 Graal compiler: optimization level: 2, target machine: armv8-a, PGO: instrument
 C compiler: cc (apple, arm64, 15.0.0)
 Garbage collector: Serial GC (max heap size: 80% of RAM)
 2 user-specific feature(s):
 - com.oracle.svm.thirdparty.gson.GsonFeature
 - org.springframework.aot.nativex.feature.PreComputeFieldFeature
------------------------------------------------------------------------------------------------------------------------
 2 experimental option(s) unlocked:
 - '-H:ResourceConfigurationResources' (origin(s): 'META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-core/native-image.properties' in 'file:///Users/huseyingokdag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar', 'META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-el/native-image.properties' in 'file:///Users/huseyingokdag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar', 'META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-websocket/native-image.properties' in 'file:///Users/huseyingokdag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar')
 - '-H:ReflectionConfigurationResources' (origin(s): 'META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-core/native-image.properties' in 'file:///Users/huseyingokdag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar', 'META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-el/native-image.properties' in 'file:///Users/huseyingokdag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar', 'META-INF/native-image/org.apache.tomcat.embed/tomcat-embed-websocket/native-image.properties' in 'file:///Users/huseyingokdag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar')
------------------------------------------------------------------------------------------------------------------------
Build resources:
 - 6.05GB of memory (75.6% of 8.00GB system memory, determined at start)
 - 8 thread(s) (100.0% of 8 available processor(s), determined at start)
[2/8] Performing analysis...  [******]                                                                  (41.2s @ 2.05GB)
   18,051 reachable types   (90.1% of   20,028 total)
   27,224 reachable fields  (64.9% of   41,939 total)
   92,257 reachable methods (64.8% of  142,369 total)
    5,760 types,   448 fields, and 6,928 methods registered for reflection
       62 types,    63 fields, and    55 methods registered for JNI access
        5 native libraries: -framework CoreServices, -framework Foundation, dl, pthread, z
[3/8] Building universe...                                                                               (6.7s @ 2.27GB)
[4/8] Parsing methods...      [***]                                                                      (9.1s @ 2.56GB)
[5/8] Inlining methods...     [**]                                                                       (2.3s @ 1.62GB)
[6/8] Compiling methods...    [************]                                                           (159.5s @ 3.72GB)
[7/8] Layouting methods...    [****]                                                                    (20.8s @ 4.21GB)
[8/8] Creating image...       [********]                                                                (60.3s @ 4.39GB)
  88.96MB (33.89%) for code area:    53,799 compilation units
 168.75MB (64.28%) for image heap:5,253,608 objects and 303 resources
   4.81MB ( 1.83%) for other data
 262.52MB in total
------------------------------------------------------------------------------------------------------------------------
Top 10 origins of code area:                                Top 10 object types in image heap:
  31.96MB java.base                                           26.62MB c.o.svm.enterprise.profiling.metadata.cctree.c
   9.08MB tomcat-embed-core-10.1.18.jar                       21.18MB c.o.svm.enterprise.profiling.metadata.cctree.d[]
   7.15MB java.xml                                            19.52MB int[]
   5.47MB jackson-databind-2.15.3.jar                         18.01MB byte[] for code metadata
   5.44MB svm.jar (Native Image)                              16.01MB byte[] for java.lang.String
   3.63MB spring-boot-3.2.2.jar                               10.06MB c.o.s.e.profiling.metadata.codepositions.g
   3.41MB spring-core-6.1.3.jar                                7.96MB java.lang.String
   2.02MB spring-web-6.1.3.jar                                 7.74MB c.o.svm.enterprise.profiling.metadata.cctree.d
   1.79MB spring-webmvc-6.1.3.jar                              7.29MB java.util.HashMap$Node
   1.51MB spring-beans-6.1.3.jar                               6.06MB c.o.s.e.profiling.metadata.codepositions.f
  17.21MB for 95 more packages                                28.31MB for 3892 more object types
                              Use '-H:+BuildReport' to create a report with more details.
------------------------------------------------------------------------------------------------------------------------
Security report:
 - Binary includes Java deserialization.
 - Use '--enable-sbom' to embed a Software Bill of Materials (SBOM) in the binary.
 - The log4j library has been detected, but the version is unavailable. Due to Log4Shell, please ensure log4j is at version 2.17.1 or later.
------------------------------------------------------------------------------------------------------------------------
Recommendations:
 PGO:  Use Profile-Guided Optimizations ('--pgo') for improved throughput.
 INIT: Adopt '--strict-image-heap' to prepare for the next GraalVM release.
 HEAP: Set max heap for improved and more predictable memory usage.
 CPU:  Enable more CPU features with '-march=native' for improved performance.
 QBM:  Use the quick build mode ('-Ob') to speed up builds during development.
------------------------------------------------------------------------------------------------------------------------
                       73.7s (23.5% of total time) in 225 GCs | Peak RSS: 2.34GB | CPU load: 4.07
------------------------------------------------------------------------------------------------------------------------
Produced artifacts:
 /Users/huseyingokdag/Downloads/demo/target/demo (executable)
========================================================================================================================
Finished generating 'demo' in 5m 12s.
